# This Travis job script has been generated by a script via
#
#   haskell-ci '--output=.travis.yml' '--config=cabal.haskell-ci' 'cabal.project'
#
# For more information, see https://github.com/haskell-CI/haskell-ci
#
# version: 0.3
#
language: c
dist: xenial

branches:
  except:
  - central-server

git:
  submodules: false  # whether to recursively clone submodules

notifications:
  irc:
    channels:
      - "irc.libera.chat#hackage"
    skip_join: true
    template:
      - "\x0313hackage-server\x03/\x0306%{branch}\x03 \x0314%{commit}\x03 %{build_url} %{message}"

cache:
  directories:
    - $HOME/.cabal/packages
    - $HOME/.cabal/store

before_cache:
  - rm -fv $CABALHOME/packages/hackage.haskell.org/build-reports.log
  # remove files that are regenerated by 'cabal update'
  - rm -fv $CABALHOME/packages/hackage.haskell.org/00-index.*
  - rm -fv $CABALHOME/packages/hackage.haskell.org/*.json
  - rm -fv $CABALHOME/packages/hackage.haskell.org/01-index.cache
  - rm -fv $CABALHOME/packages/hackage.haskell.org/01-index.tar
  - rm -fv $CABALHOME/packages/hackage.haskell.org/01-index.tar.idx

  - rm -rfv $CABALHOME/packages/head.hackage

matrix:
  include:
    - compiler: "ghc-8.10.4"
      addons: {apt: {packages: [ghc-ppa-tools,cabal-install-3.2,ghc-8.10.4], sources: [hvr-ghc]}}
    - compiler: "ghc-8.8.3"
      addons: {apt: {packages: [ghc-ppa-tools,cabal-install-3.2,ghc-8.8.3], sources: [hvr-ghc]}}

  allow_failures:
    - compiler: "ghc-8.8.3"

before_install:
  - HC=/opt/ghc/bin/${CC}
  - HCPKG=${HC/ghc/ghc-pkg}
  - unset CC
  - CABAL=/opt/ghc/bin/cabal
  - CABALHOME=$HOME/.cabal
  - export PATH="$CABALHOME/bin:$PATH"
  - ROOTDIR=$(pwd)
  - HCNUMVER=$(( $(${HC} --numeric-version|sed -E 's/([0-9]+)\.([0-9]+)\.([0-9]+).*/\1 * 10000 + \2 * 100 + \3/') ))
  - echo $HCNUMVER
  - sudo apt-get -y install libbrotli-dev

install:
  - ${CABAL} --version
  - echo "$(${HC} --version) [$(${HC} --print-project-git-commit-id 2> /dev/null || echo '?')]"
  - TEST=--enable-tests
  - BENCH=--enable-benchmarks
  - GHCHEAD=${GHCHEAD-false}
  - travis_retry ${CABAL} update -v
  - sed -i.bak 's/^jobs:/-- jobs:/' $CABALHOME/config
  - rm -fv cabal.project cabal.project.local
  - grep -Ev -- '^\s*--' $CABALHOME/config | grep -Ev '^\s*$'
  - rm -f cabal.project
  - touch cabal.project
  - "printf 'packages: \".\"\\n' >> cabal.project"
  - "echo 'constraints: foundation -none' >> cabal.project"
  - "echo 'constraints: cryptonite -none' >> cabal.project"
  - "echo 'constraints: cryptohash -none' >> cabal.project"
  - "printf 'write-ghc-environment-files: always\\n' >> cabal.project"
  - touch cabal.project.local
  - "for pkg in $($HCPKG list --simple-output); do echo $pkg | sed 's/-[^-]*$//' | grep -vE -- '^(hackage-server)$' | sed 's/^/constraints: /' | sed 's/$/ installed/' >> cabal.project.local; done"
  - cat cabal.project || true
  - cat cabal.project.local || true
  - if [ -f "./configure.ac" ]; then (cd "." && autoreconf -i); fi
  - rm -f cabal.project.freeze
  - ${CABAL} freeze -w ${HC} ${TEST} ${BENCH} --project-file="cabal.project" --dry
  - "cat \"cabal.project.freeze\" | sed -E 's/^(constraints: *| *)//' | sed 's/any.//'"
  - rm  "cabal.project.freeze"
  - ${CABAL} build -w ${HC} ${TEST} ${BENCH} --project-file="cabal.project" --dep -j2 all
  - ${CABAL} build -w ${HC} --disable-tests --disable-benchmarks --project-file="cabal.project" --dep -j2 all
  - rm -rf .ghc.environment.* "."/dist
  - DISTDIR=$(mktemp -d /tmp/dist-test.XXXX)

# Here starts the actual work to be performed for the package under test;
# any command which exits with a non-zero exit code causes the build to fail.
script:
  # test that source-distributions can be generated
  - ${CABAL} sdist all
  - mv dist-newstyle/sdist/*.tar.gz ${DISTDIR}/
  - cd ${DISTDIR} || false
  - find . -maxdepth 1 -name '*.tar.gz' -exec tar -xvf '{}' \;
  - rm -f cabal.project
  - touch cabal.project
  - "printf 'packages: \"hackage-server-*/*.cabal\"\\n' >> cabal.project"
  - "echo 'constraints: foundation -none' >> cabal.project"
  - "echo 'constraints: cryptonite -none' >> cabal.project"
  - "echo 'constraints: cryptohash -none' >> cabal.project"
  - "printf 'write-ghc-environment-files: always\\n' >> cabal.project"
  - touch cabal.project.local
  - "for pkg in $($HCPKG list --simple-output); do echo $pkg | sed 's/-[^-]*$//' | grep -vE -- '^(hackage-server)$' | sed 's/^/constraints: /' | sed 's/$/ installed/' >> cabal.project.local; done"
  - cat cabal.project || true
  - cat cabal.project.local || true
  # this builds all libraries and executables (without tests/benchmarks)
  - ${CABAL} build -w ${HC} --disable-tests --disable-benchmarks all

  # build & run tests, build benchmarks
  - ${CABAL} build -w ${HC} ${TEST} ${BENCH} all
  - ${CABAL} test -w ${HC} ${TEST} ${BENCH} all

  # cabal check
  - (cd hackage-server-* && ${CABAL} check)

  # Build without installed constraints for packages in global-db
  - rm -f cabal.project.local; ${CABAL} build -w ${HC} --disable-tests --disable-benchmarks all;

# REGENDATA ["--output=.travis.yml","--config=cabal.haskell-ci","cabal.project"]
# EOF
